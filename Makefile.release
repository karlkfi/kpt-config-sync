#!/usr/bin/make
#
# Copyright 2018 Nomos Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

######################################################################

# Makefile that configures for release.
#
# This file contains all the specific workflow and configuration to create
# a nomos release.
#
# make release - will clean, build, package and push the entire code set to our
# 			release location and move the 'latest' image tag to
# 			the release just built. This must be run from clean
# 			git client.
#
# make bless-release - will move the 'stable' image tag to the release that
# 			was just built.

##### CONFIG #####

# List of GOOS-GOARCH cross compilation targets
PLATFORMS ?= linux-amd64 darwin-amd64 windows-amd64

# GCP project that owns container registry for official releases.
GCP_PROJECT ?= nomos-release

# The GCS bucket containing official releases.
RELEASE_BUCKET ?= gs://nomos-release

# Use git tags to set version string.
VERSION := $(shell git describe --tags --always --dirty)

# Set the IMAGE_TAG to only include the version info and no other build info.
IMAGE_TAG := $(VERSION)

# Enable optimzations.
BUILD_MODE ?= release

##### SETUP ######

include Makefile

##### TARGETS #####

# Checks the version tag to see if its dirty.  We should never release from
# a dirty git client.
check-dirty:
	@echo "VERSION=$(VERSION)"
	@if [[ $(VERSION) == *"dirty"* ]]; then \
		echo "Cannot release from a dirty client: VERSION=$(VERSION)"; \
		exit 1; \
	fi

$(STAGING_DIR)/installer.zip: \
		installer-staging \
		$(wildcard $(STAGING_DIR)/installer/*)
	@echo "+++ Building installer archive: $@"
	@(cd .output/staging ; zip -r $@ installer)

# Uploads the release artifacts to a versioned GCS release bucket. Also uploads
# the artifacts to a GCS release bucket with version name "latest".
release: \
		clean \
		test-all \
		$(STAGING_DIR)/installer.zip \
		docs-package
	gsutil -m cp -R \
		$(STAGING_DIR)/installer.zip \
		$(STAGING_DIR)/nomos-docs.zip  \
	    $(BIN_DIR) \
		$(RELEASE_BUCKET)/$(VERSION)
	gsutil acl ch -r -u AllUsers:R $(RELEASE_BUCKET)/$(VERSION)
	@echo "+++ Marking release as 'latest'"
	gcloud container images add-tag --quiet \
		gcr.io/$(GCP_PROJECT)/nomos:$(IMAGE_TAG) \
		gcr.io/$(GCP_PROJECT)/nomos:latest
	gsutil -m rsync -r -d -p \
			$(RELEASE_BUCKET)/$(VERSION) \
			$(RELEASE_BUCKET)/latest

# For releases we attach the :stable tag to the latest image
# built and update the stable docs package.  Dirty package releases  are not
# allowed.
bless-release: check-dirty
	@echo "+++ Marking release as 'stable'"
	gcloud container images add-tag --quiet \
		gcr.io/$(GCP_PROJECT)/nomos:$(IMAGE_TAG) \
		gcr.io/$(GCP_PROJECT)/nomos:stable
	gsutil -m rsync -r -d -p \
		$(RELEASE_BUCKET)/$(VERSION) \
		$(RELEASE_BUCKET)/stable

autorelease:
	$(info Work in progress)
