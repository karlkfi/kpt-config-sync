# Rules for building the installer

OIDC_DIR := .kube/plugins/oidc

$(KUBECTL_PLUGIN_STAGING_DIR)/$(OIDC_DIR):
	@mkdir -p $(KUBECTL_PLUGIN_STAGING_DIR)/$(OIDC_DIR)

# This target expects that the binaries have already been built.
kubectl-plugin-staging: \
		$(KUBECTL_PLUGIN_STAGING_DIR)/$(OIDC_DIR) \
		$(TOP_DIR)/build/kubectl-oidc/kubectl-oidc \
		$(TOP_DIR)/build/kubectl-oidc/plugin.yaml
	@( \
			cd $(GO_DIR); \
			rsync --relative --quiet \
			      `find bin -type f | grep kubectl-oidc` \
			      $(KUBECTL_PLUGIN_STAGING_DIR)/.kube/plugins/oidc; \
	)
	@cp $(TOP_DIR)/build/kubectl-oidc/* \
			$(KUBECTL_PLUGIN_STAGING_DIR)/$(OIDC_DIR)
	@( \
			cd $(KUBECTL_PLUGIN_STAGING_DIR); \
	        zip -r kubectl-oidc-plugin.zip .; \
	)

.PHONY: installer-staging
installer-staging: \
		push-to-gcr-nomos \
		gen-yaml-all \
		kubectl-plugin-staging \
		$(OUTPUT_DIR)
	@echo "+++ Creating installer staging directory"
	@rm -rf $(STAGING_DIR)/installer
	@( \
			cd $(GO_DIR); \
			rsync --relative --quiet \
			      `find bin -type f | grep installer` \
			      $(STAGING_DIR)/installer/; \
	)
	@cp -r $(TOP_DIR)/build/installer $(STAGING_DIR)
	@mkdir -p $(STAGING_DIR)/installer/manifests/deployment
	@cp $(OUTPUT_DIR)/deployment/*  $(STAGING_DIR)/installer/manifests/deployment
	@cp $(TOP_DIR)/manifests/*.yaml $(STAGING_DIR)/installer/manifests
	@cp $(TOP_DIR)/build/installer/install.sh $(STAGING_DIR)/installer
	@mkdir -p $(STAGING_DIR)/installer/scripts
	@cp $(TOP_DIR)/scripts/deploy-resourcequota-admission-controller.sh \
		$(STAGING_DIR)/installer/scripts
	@cp $(TOP_DIR)/scripts/generate-admission-controller-certs.sh \
		$(STAGING_DIR)/installer/scripts
	@cp $(TOP_DIR)/scripts/generate-resourcequota-admission-controller-certs.sh \
		$(STAGING_DIR)/installer/scripts

check-nomos-installer-config:
	@echo "+++ Checking installer configuration"
	@if [ -z "$(NOMOS_INSTALLER_CONFIG)" ]; then \
		echo '### Must set env variable NOMOS_INSTALLER_CONFIG to use make deploy'; \
		exit 1; \
	fi;
