# Custom Resource Definition for a RootSync.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  labels:
    configmanagement.gke.io/system: "true"
    configmanagement.gke.io/arch: "csmr"
  name: rootsyncs.configsync.gke.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.source.commit
    name: SourceCommit
    type: string
  - JSONPath: .status.sync.commit
    name: SyncCommit
    type: string
  group: configsync.gke.io
  names:
    kind: RootSync
    listKind: RootSyncList
    plural: rootsyncs
    singular: rootsync
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RootSync is the Schema for the rootsyncs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RootSyncSpec defines the desired state of RootSync
          properties:
            git:
              description: git contains configuration specific to importing policies
                from a Git repo.
              properties:
                auth:
                  description: auth is the type of secret configured for access to
                    the Git repo. Must be one of ssh, cookiefile, gcenode, token,
                    or none. Required. The validation of this is case-sensitive. Required.
                  pattern: ^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$
                  type: string
                branch:
                  description: 'branch is the git branch to checkout. Default: "master".'
                  type: string
                dir:
                  description: 'dir is the absolute path of the directory that contains
                    the local policy.  Default: the root directory of the repo.'
                  type: string
                gcpServiceAccountEmail:
                  description: 'gcpServiceAccountEmail specifies the GCP service account
                    used to annotate the RootSync controller Kubernetes Service
                    Account. Note: The field is used when spec.git.auth: gcpserviceaccount.'
                  type: string
                period:
                  description: 'period is the time duration in seconds between consecutive
                    syncs.  Default: 15 seconds. Note to developers that customers
                    specify this value using string (https://golang.org/pkg/time/#Duration.String)
                    like "3s" in their Custom Resource YAML. However, time.Duration
                    is at a nanosecond granularity, and it''s easy to introduce a
                    bug where it looks like the code is dealing with seconds but its
                    actually nanoseconds (or vice versa).'
                  type: string
                proxy:
                  description: proxy is a struct that contains options for configuring
                    access to the Git repo via a proxy. Only has an effect when secretType
                    is one of ("cookiefile", "none"). Optional.
                  type: string
                repo:
                  description: repo is the git repository URL to sync from. Required.
                  type: string
                revision:
                  description: 'revision is the git revision (tag, ref or commit)
                    to fetch. Default: "HEAD".'
                  type: string
                secretRef:
                  description: secretRef is the secret used to connect to the Git
                    source of truth.
                  properties:
                    name:
                      description: name represents the secret name.
                      type: string
                  type: object
              required:
              - auth
              - repo
              type: object
            sourceFormat:
              description: "sourceFormat specifies how the repository is formatted.
                See documentation for specifics of what these options do. \n Must
                be one of hierarchy, unstructured. Optional. Set to hierarchy if not
                specified. \n The validation of this is case-sensitive."
              pattern: ^(hierarchy|unstructured|)$
              type: string
          type: object
        status:
          description: RootSyncStatus defines the observed state of RootSync
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true