# Custom Resource Definition for a RootSync.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  labels:
    configmanagement.gke.io/system: "true"
    configmanagement.gke.io/arch: "csmr"
  name: rootsyncs.configmanagement.gke.io
spec:
  group: configmanagement.gke.io
  names:
    kind: RootSync
    listKind: RootSyncList
    plural: rootsyncs
    singular: rootsync
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: RootSync is the Schema for the rootsyncs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RootSyncSpec defines the desired state of RootSync
          properties:
            git:
              description: Git contains configuration specific to importing policies
                from a Git repo.
              properties:
                auth:
                  description: Auth is the type of secret configured for access to
                    the Git repo. Must be one of ssh, cookiefile, gcenode, token,
                    or none. Required. The validation of this is case-sensitive. Required.
                  pattern: ^(ssh|cookiefile|gcenode|token|none)$
                  type: string
                dir:
                  description: 'Dir is the absolute path of the directory that contains
                    the local policy.  Default: the root directory of the repo.'
                  type: string
                period:
                  description: 'Period is the time duration in seconds between consecutive
                    syncs.  Default: 15 seconds. Note to developers that customers
                    specify this value using string (https://golang.org/pkg/time/#Duration.String)
                    like "3s" in their Custom Resource YAML. However, time.Duration
                    is at a nanosecond granularity, and it''s easy to introduce a
                    bug where it looks like the code is dealing with seconds but its
                    actually nanoseconds (or vice versa).'
                  type: string
                proxy:
                  description: Proxy is a struct that contains options for configuring
                    access to the Git repo via a proxy. Only has an effect when secretType
                    is one of ("cookiefile", "none"). Optional.
                  type: string
                repo:
                  description: Repo is the git repository URL to sync from. Required.
                  type: string
                revision:
                  description: 'Revision is the git revision (tag, branch, ref or
                    commit) to fetch.  Default: "master".'
                  type: string
                secretRef:
                  description: SecretRef is the secret used to connect to the Git
                    source of truth.
                  properties:
                    name:
                      description: Name represents the secret name.
                      type: string
                  type: object
              required:
              - auth
              - repo
              type: object
          type: object
        status:
          description: RootSyncStatus defines the observed state of RootSync
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
  subresources:
    status: {}
