// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/nomos/pkg/syncer/manager (interfaces: RestartableManager)

// Package testing is a generated GoMock package.
package testing

import (
	"reflect"

	v1 "github.com/google/nomos/pkg/api/policyhierarchy/v1"

	"github.com/golang/mock/gomock"
	"github.com/google/nomos/pkg/util/discovery"
)

// MockRestartableManager is a mock of RestartableManager interface
type MockRestartableManager struct {
	ctrl     *gomock.Controller
	recorder *MockRestartableManagerMockRecorder
}

// MockRestartableManagerMockRecorder is the mock recorder for MockRestartableManager
type MockRestartableManagerMockRecorder struct {
	mock *MockRestartableManager
}

// NewMockRestartableManager creates a new mock instance
func NewMockRestartableManager(ctrl *gomock.Controller) *MockRestartableManager {
	mock := &MockRestartableManager{ctrl: ctrl}
	mock.recorder = &MockRestartableManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRestartableManager) EXPECT() *MockRestartableManagerMockRecorder {
	return m.recorder
}

// Clear mocks base method
func (m *MockRestartableManager) Clear() {
	m.ctrl.Call(m, "Clear")
}

// Clear indicates an expected call of Clear
func (mr *MockRestartableManagerMockRecorder) Clear() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockRestartableManager)(nil).Clear))
}

// UpdateSyncResources mocks base method
func (m *MockRestartableManager) UpdateSyncResources(arg0 []*v1.Sync, arg1 *discovery.APIInfo, arg2 chan error) error {
	ret := m.ctrl.Call(m, "UpdateSyncResources", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSyncResources indicates an expected call of UpdateSyncResources
func (mr *MockRestartableManagerMockRecorder) UpdateSyncResources(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSyncResources", reflect.TypeOf((*MockRestartableManager)(nil).UpdateSyncResources), arg0, arg1, arg2)
}
