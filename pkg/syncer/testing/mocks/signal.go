// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/nomos/pkg/syncer/sync (interfaces: RestartSignal)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRestartSignal is a mock of RestartSignal interface
type MockRestartSignal struct {
	ctrl     *gomock.Controller
	recorder *MockRestartSignalMockRecorder
}

// MockRestartSignalMockRecorder is the mock recorder for MockRestartSignal
type MockRestartSignalMockRecorder struct {
	mock *MockRestartSignal
}

// NewMockRestartSignal creates a new mock instance
func NewMockRestartSignal(ctrl *gomock.Controller) *MockRestartSignal {
	mock := &MockRestartSignal{ctrl: ctrl}
	mock.recorder = &MockRestartSignalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRestartSignal) EXPECT() *MockRestartSignalMockRecorder {
	return m.recorder
}

// Restart mocks base method
func (m *MockRestartSignal) Restart() {
	m.ctrl.Call(m, "Restart")
}

// Restart indicates an expected call of Restart
func (mr *MockRestartSignalMockRecorder) Restart() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Restart", reflect.TypeOf((*MockRestartSignal)(nil).Restart))
}
