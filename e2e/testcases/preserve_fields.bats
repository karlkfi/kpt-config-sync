#!/bin/bash

set -euo pipefail

load "../lib/clusterrole"
load "../lib/debug"
load "../lib/git"
load "../lib/resource"
load "../lib/service"
load "../lib/setup"
load "../lib/wait"

YAML_DIR=${BATS_TEST_DIRNAME}/../testdata

setup() {
  setup::common
  setup::git::initialize
  setup::git::init_acme
}

teardown() {
  setup::common_teardown
}

@test "Preserve autogenerated fields when syncing services" {
  local resname="e2e-test-service"

  debug::log "Adding service to repo"
  git::add "${YAML_DIR}/preservefields/service.yaml" acme/namespaces/eng/backend/service.yaml
  git::commit

  debug::log "Checking that the service appears on cluster"
  wait::for -t 30 -- kubectl get services ${resname} -n backend
  resource::check_count -n backend -r services -c 1
  resource::check -n backend service ${resname} -a "nomos.dev/managed=enabled"

  debug::log "Checking that autogenerated fields are preserved"
  wait::for -t 30 -- service::has_cluster_ip ${resname} backend
  clusterIP=$(kubectl get service ${resname} -n backend -ojson | jq -c ".spec.clusterIP")
  [[ "${clusterIP}" != "" ]] || debug::error "service.spec.clusterIP should not have been removed"

  debug::log "Modify custom resource in repo"
  oldresver=$(resource::resource_version services ${resname} -n backend)
  git::update "${YAML_DIR}/preservefields/service-modify.yaml" acme/namespaces/eng/backend/service.yaml
  git::commit

  debug::log "Checking that autogenerated field is preserved after syncing an update"
  resource::wait_for_update -n backend -t 20 services "${resname}" "${oldresver}"
  currentClusterRules=$(kubectl get service ${resname} -n backend -ojson | jq -c ".spec.clusterIP")
  [[ "${currentClusterRules}" == "${clusterIP}" ]] || debug::error "service.spec.clusterIP shouldn't have changed from ${clusterIP} to ${currentClusterRules}"
}

@test "Preserve autogenerated fields when syncing ClusterRoles with aggregation" {
  local resname="aggregate"
  local expectRulesCount=2

  debug::log "Adding a ClusterRole that aggregates other ClusterRoles"
  git::update "${YAML_DIR}/preservefields/namespace-viewer-clusterrole.yaml" acme/cluster/namespace-viewer-clusterrole.yaml
  git::update "${YAML_DIR}/preservefields/rbac-viewer-clusterrole.yaml" acme/cluster/rbac-viewer-clusterrole.yaml
  git::add "${YAML_DIR}/preservefields/aggregate-clusterrole.yaml" acme/cluster/aggregate-clusterrole.yaml
  git::commit

  debug::log "Checking that the aggregate ClusterRole appears on cluster"
  wait::for -t 30 -- kubectl get clusterroles ${resname}
  resource::check clusterrole ${resname} -a "nomos.dev/managed=enabled"

  debug::log "Checking that autogenerated fields are preserved"
  wait::for -t 30 -- clusterrole::rules_count_eq ${resname} ${expectRulesCount}

  debug::log "Modify custom resource in repo"
  oldresver=$(resource::resource_version clusterrole ${resname})
  git::update "${YAML_DIR}/preservefields/aggregate-clusterrole-modify.yaml" acme/cluster/aggregate-clusterrole.yaml
  git::commit

  debug::log "Checking that autogenerated field is preserved after syncing an update"
  resource::wait_for_update -t 20 clusterrole "${resname}" "${oldresver}"
  rulesCount=$(kubectl get clusterrole ${resname} -ojson | jq -c ".rules | length")
  (( "${rulesCount}" == "${expectRulesCount}" )) || debug::error "clusterrole.rules count shouldn't have changed from ${expectRulesCount} to ${rulesCount}"
}