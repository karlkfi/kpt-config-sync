
# Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)
ifeq (,$(shell go env GOBIN))
GOBIN=$(shell go env GOPATH)/bin
else
GOBIN=$(shell go env GOBIN)
endif

# Generate DeepCopy and runtime.Object implementation methods.
generate: controller-gen
	$(CONTROLLER_GEN) \
		object:headerFile="hack/boilerplate.txt" \
		paths="./pkg/api/configsync/v1alpha1/reposync_types.go" \
		paths="./pkg/api/configsync/v1alpha1/rootsync_types.go" \
		paths="./pkg/api/configsync/v1alpha1/multirepo_types.go"

generate-deprecated: controller-gen
	$(CONTROLLER_GEN) \
		object:headerFile="hack/boilerplate.txt" \
		paths="./pkg/api/configmanagement/v1/reposync_types.go" \
		paths="./pkg/api/configmanagement/v1/rootsync_types.go" \
		paths="./pkg/api/configmanagement/v1/multirepo_types.go"

# find or download controller-gen
# download controller-gen if necessary
controller-gen:
ifeq (, $(shell which controller-gen))
	@{ \
	set -e ;\
	CONTROLLER_GEN_TMP_DIR=$$(mktemp -d) ;\
	cd $$CONTROLLER_GEN_TMP_DIR ;\
	go mod init tmp ;\
	go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.5 ;\
	rm -rf $$CONTROLLER_GEN_TMP_DIR ;\
	}
CONTROLLER_GEN=$(GOBIN)/controller-gen
else
CONTROLLER_GEN=$(shell which controller-gen)
endif
