# Rules for deploying the nomos via the operator-based installer.
# Note that the rules for creating and deploying the operator-bundle.yaml
# and operator image are in the nomos-operator repo, available at:
# https://gke-internal.git.corp.google.com/cluster-lifecycle/cluster-operators/+/master/nomos-operator

ifndef GCP_PROJECT
$(error GCP_PROJECT must be set, but is not)
endif
ifndef OUTPUT_DIR
$(error OUTPUT_DIR must be set, but is not)
endif
ifndef OPERATOR_STAGING_DIR
$(error OPERATOR_STAGING_DIR must be set, but is not)
endif

DEV_BUCKET := gs://nomos-release/operator-latest
DEV_BUCKET_USER ?= gs://${GCP_PROJECT}/${USER}
OPERATOR_STAGING_DIR := ${OUTPUT_DIR}/staging/operator
GIT_SYNC_TAG := v3.0.1-gke.1__linux_amd64
GIT_SYNC := git-sync:$(GIT_SYNC_TAG)
GIT_SYNC_SRC := gcr.io/nomos-release/$(GIT_SYNC)

# Operator manifest places all generated and static yaml files into a known
# directory so the operator can pick them up for manifest generation.
# TODO: have this depend on actual yaml instead of the gen-yaml-all rule then
# use $^ for inputs.
.PHONY: operator-manifest
operator-manifest: gen-yaml-all
	@echo "+++ Generating legacy manifest directory"
	@rm -rf $(STAGING_DIR)/installer/manifests
	@mkdir -p $(STAGING_DIR)/installer/manifests
	@cp manifests/*.yaml $(GEN_YAML_DIR)/*.yaml $(STAGING_DIR)/installer/manifests

.PHONY: pull-git-sync
pull-git-sync:
	@if ! docker image inspect $(GIT_SYNC_SRC) > /dev/null; then \
	docker image pull $(GIT_SYNC_SRC); \
	fi

# prepare-operator builds and pushes the local tree, then retrieves the operator
# manifest bundle from GCP_PROJECT and applies it, injecting PRIVATE_REGISTRY
# so that the operator deploys the nomos binary from the local tree
# the local tree. The version of the operator is the latest dev version, which
# is the same for all developers on the nomos cluster. To use a custom operator
# build, use deploy-operator-user.
.PHONY: prepare-operator
prepare-operator: push-to-gcr-nomos pull-git-sync
	@echo "+++ Preparing regular operator"
	@rm -rf ${OPERATOR_STAGING_DIR}
	@mkdir -p ${OPERATOR_STAGING_DIR}
	@gsutil cp ${DEV_BUCKET}/nomos-operator.yaml \
		${OPERATOR_STAGING_DIR}/operator-bundle.yaml
	docker tag $(GIT_SYNC_SRC) gcr.io/${GCR_PREFIX}/$(GIT_SYNC)
	docker push gcr.io/${GCR_PREFIX}/$(GIT_SYNC)
# TODO(b/119836195): Using sed here because the Prow test environment doesn't
# have the envsubst command. Once it does, switch back
	@cat .output/staging/operator/operator-bundle.yaml \
		| sed 's|private-registry=|private-registry=gcr.io/${GCR_PREFIX}|' \
		> ${OPERATOR_STAGING_DIR}/defined-operator-bundle.yaml

# deploy-operator installs the operator prepared with prepare-operator
.PHONY: deploy-operator
deploy-operator: prepare-operator
	 kubectl apply -f ${OPERATOR_STAGING_DIR}/defined-operator-bundle.yaml

# deploy-operator-user builds and pushes the local tree, then retrieves the operator
# manifest bundle from GCP_PROJECT/USER and applies it, injecting PRIVATE_REGISTRY
# so that the operator deploys the nomos binary deployed by the operator reflects
# the local tree. The version of the operator is the latest version pushed to
# GCP_PROJECT/USER in GCR, which was created by the release-user flow in the
# operator directory. If you have not created this for your user before, it does
# not exist and must be created from the operator repository.
.PHONY: prepare-operator-user
prepare-operator-user: push-to-gcr-nomos pull-git-sync
	@echo "+++ Preparing user-specific operator"
	@rm -rf ${OPERATOR_STAGING_DIR}
	@mkdir -p ${OPERATOR_STAGING_DIR}
	@gsutil cp ${DEV_BUCKET_USER}/operator-bundle.yaml ${OPERATOR_STAGING_DIR}/
	docker tag $(GIT_SYNC_SRC) gcr.io/${GCR_PREFIX}/$(GIT_SYNC)
	docker push gcr.io/${GCR_PREFIX}/$(GIT_SYNC)
	@PROJECT_NAME=${GCP_PROJECT}/${USER} PRIVATE_REGISTRY="gcr.io/${GCR_PREFIX}" IMAGE_TAG=${IMAGE_TAG} envsubst < \
		${OPERATOR_STAGING_DIR}/operator-bundle.yaml > ${OPERATOR_STAGING_DIR}/defined-operator-bundle.yaml

# deploy-operator-user installs the operator prepared with prepare-operator-user
.PHONY: deploy-operator-user
deploy-operator-user: prepare-operator-user
	kubectl apply -f ${OPERATOR_STAGING_DIR}/defined-operator-bundle.yaml

